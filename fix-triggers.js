const { Client } = require("pg");
const config = require("./config/database");

async function fixTriggers() {
  const client = new Client(config);

  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await client.connect();
    console.log("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...");

    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–ª–æ–Ω–æ–∫ updated_at –≤–æ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö...");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É updated_at, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const tablesQuery = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'";
    const tables = await client.query(tablesQuery);
    
    for (const table of tables.rows) {
      const tableName = table.table_name;
      if (tableName === 'session') continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–µ—Å—Å–∏–π
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ updated_at
      const columnsQuery = `
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = '${tableName}' AND column_name = 'updated_at'
      `;
      const columnResult = await client.query(columnsQuery);
      
      if (columnResult.rows.length === 0) {
        console.log(`üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É ${tableName}...`);
        await client.query(`
          ALTER TABLE ${tableName} 
          ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        `);
        console.log(`‚úÖ –ö–æ–ª–æ–Ω–∫–∞ updated_at –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É ${tableName}`);
      }
    }

    console.log("üîß –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤...");
    await client.query(`
      DROP TRIGGER IF EXISTS update_users_updated_at ON users;
      DROP TRIGGER IF EXISTS update_media_updated_at ON media;
      DROP TRIGGER IF EXISTS update_rentals_updated_at ON rentals;
    `);
    console.log("‚úÖ –°—Ç–∞—Ä—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã");

    console.log("üîß –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at...");
    await client.query(`
      CREATE OR REPLACE FUNCTION update_updated_at_column()
      RETURNS TRIGGER AS $$
      BEGIN
        NEW.updated_at = CURRENT_TIMESTAMP;
        RETURN NEW;
      END;
      $$ LANGUAGE 'plpgsql';
    `);
    console.log("‚úÖ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at —Å–æ–∑–¥–∞–Ω–∞");

    console.log("üîß –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤...");
    await client.query(`
      CREATE TRIGGER update_users_updated_at 
      BEFORE UPDATE ON users
      FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

      CREATE TRIGGER update_media_updated_at 
      BEFORE UPDATE ON media
      FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

      CREATE TRIGGER update_rentals_updated_at 
      BEFORE UPDATE ON rentals
      FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
    `);
    console.log("‚úÖ –ù–æ–≤—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã");

    console.log("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–ª–æ–Ω–∫–∏ is_banned –≤ —Ç–∞–±–ª–∏—Ü–µ users...");
    const isBannedQuery = `
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'users' AND column_name = 'is_banned'
    `;
    const isBannedResult = await client.query(isBannedQuery);
    
    if (isBannedResult.rows.length === 0) {
      console.log("üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ is_banned –≤ —Ç–∞–±–ª–∏—Ü—É users...");
      await client.query(`
        ALTER TABLE users 
        ADD COLUMN is_banned BOOLEAN DEFAULT FALSE
      `);
      console.log("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ is_banned –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users");
    } else {
      console.log("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ is_banned —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users");
    }

    console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
  } finally {
    await client.end();
  }
}

fixTriggers(); 