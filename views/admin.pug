doctype html
html(lang="ru")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Панель администратора
    style.
      body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }
      .container { max-width: 1200px; margin: auto; }
      h1, h2 { color: #333; }
      .stats { display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px; margin: 20px 0; }
      .stat-card { background: white; padding: 20px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
      .stat-number { font-size: 24px; font-weight: bold; color: #007bff; }
      table { width: 100%; border-collapse: collapse; margin-top: 20px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
      th, td { padding: 12px; border: 1px solid #ddd; text-align: left; }
      th { background-color: #007bff; color: white; }
      button { border: none; padding: 8px 16px; border-radius: 5px; cursor: pointer; margin: 2px; }
      button:hover { opacity: 0.9; }
      .delete-btn { background: #dc3545; color: white; }
      .ban-btn { background: #ffc107; color: black; }
      .unban-btn { background: #28a745; color: white; }
      .banned-user { background-color: #fff3cd; }
      nav { margin-bottom: 20px; }
      nav a { margin-right: 10px; color: #007bff; text-decoration: none; cursor: pointer; }
      nav a:hover { text-decoration: underline; }
      .role-client { color: #6c757d; }
      .role-employee { color: #28a745; }
      .role-admin { color: #007bff; }
      .form-section { background: white; padding: 20px; border-radius: 5px; margin: 20px 0; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
      .form-group { margin-bottom: 15px; }
      .form-group label { display: block; margin-bottom: 5px; }
      .form-group input { width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; }
      .success-message { color: green; margin: 10px 0; }
      .error-message { color: red; margin: 10px 0; }
      .submit-btn { background: #28a745; color: white; }
      .submit-btn:hover { background: #218838; }
      tr:hover { background-color: #f8f9fa; }
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")
  body
    .container
      nav
        a(href="/") Каталог
        a(href="/admin") Панель администратора
        a#logout-link Выйти

      h1 Панель администратора

      .stats
        .stat-card
          h3 Общее количество аренд
          .stat-number #{totalRentals}
        .stat-card
          h3 Общая сумма дохода
          .stat-number #{totalRevenue.toFixed(2)} руб.

      .form-section
        h2 Создать аккаунт сотрудника
        form#createEmployeeForm
          .form-group
            label(for="employeeName") Имя сотрудника
            input#employeeName(type="text" name="name" required)
          button.submit-btn(type="submit") Создать аккаунт сотрудника
        #employeeResult

      .users-list
        h2 Управление пользователями
        table
          thead
            tr
              th Имя
              th Email
              th Роль
              th Статус
              th Действия
          tbody
            each user in users
              - const roleClass = user.role === 'Администратор' ? 'role-admin' : (user.role === 'Сотрудник' ? 'role-employee' : 'role-client')
              tr(class=user.is_banned ? 'banned-user' : '')
                td #{user.name}
                td #{user.email}
                td(class=roleClass) #{user.role}
                td #{user.is_banned ? 'Заблокирован' : 'Активен'}
                td
                  if user.id !== currentUser.id
                    if user.role === 'Клиент'
                      if user.is_banned
                        button.unban-btn(onclick=`unbanUser(${user.id})`) Разблокировать
                      else
                        button.ban-btn(onclick=`banUser(${user.id})`) Заблокировать
                    else if user.role === 'Сотрудник'
                      button.delete-btn(onclick=`deleteUser(${user.id})`) Удалить

    script.
      $(document).ready(function() {
        // Обработка выхода
        $('#logout-link').click(function(e) {
          e.preventDefault();
          $.ajax({
            url: '/auth/logout',
            method: 'POST',
            success: function() {
              window.location.href = '/login';
            },
            error: function() {
              alert('Ошибка при выходе из системы');
            }
          });
        });

        // Создание сотрудника
        $('#createEmployeeForm').submit(function(e) {
          e.preventDefault();
          const employeeName = $('#employeeName').val().trim();
          
          if (!employeeName) {
            $('#employeeResult').html('<p class="error-message">Введите имя сотрудника</p>');
            return;
          }

          $.ajax({
            url: '/api/users/employees',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ name: employeeName }),
            success: function(response) {
              $('#employeeResult').html(
                '<p class="success-message">Сотрудник создан успешно!<br>' +
                'Email: ' + response.user.email + '<br>' +
                'Пароль: ' + response.password + '</p>'
              );
              // Показываем данные на 10 секунд, затем обновляем страницу
              setTimeout(() => location.reload(), 10000);
            },
            error: function(xhr) {
              $('#employeeResult').html(
                '<p class="error-message">' + (xhr.responseJSON?.error || 'Ошибка при создании сотрудника') + '</p>'
              );
            }
          });
        });
      });

      function deleteUser(userId) {
        if (!confirm('Вы уверены, что хотите удалить этого сотрудника?')) return;
        
        $.ajax({
          url: `/api/users/${userId}`,
          method: 'DELETE',
          success: function() {
            alert('Пользователь успешно удалён');
            location.reload();
          },
          error: function(xhr) {
            alert(xhr.responseJSON?.error || 'Ошибка при удалении пользователя');
          }
        });
      }

      function banUser(userId) {
        $.ajax({
          url: `/api/users/${userId}/ban`,
          method: 'POST',
          success: function() {
            alert('Пользователь заблокирован');
            location.reload();
          },
          error: function(xhr) {
            alert(xhr.responseJSON?.error || 'Ошибка при блокировке пользователя');
          }
        });
      }

      function unbanUser(userId) {
        $.ajax({
          url: `/api/users/${userId}/unban`,
          method: 'POST',
          success: function() {
            alert('Пользователь разблокирован');
            location.reload();
          },
          error: function(xhr) {
            alert(xhr.responseJSON?.error || 'Ошибка при разблокировке пользователя');
          }
        });
      }